rtvs::debug_source("C:/Users/adamberger/source/repos/Martina_Project/Martina_Project/Script.R")
install.packages("knitr", lib="C:/Program Files/Microsoft SQL Server/140/R_SERVER/library")
install.packages("ggplot2", lib="C:/Users/adamberger/Documents/R/win-library/3.3")
install.packages("car", lib="C:/Users/adamberger/Documents/R/win-library/3.3")
Library(knitr)
library(ggplot2)
install.packages("ggplot2")
install.packages("car")
install.packages("stringr")
install.packages("graphicsQC")
library(knitr)
install.packages("knitr")
install.packages("broom")
library(knitr)
library(broom)
library(ggplot2)
library(car)
library(stringr)
Exp3_r1 <- read.table("D:/Soybean Anther Data/R-Analysis/Exp3.csv", header = T, sep = ",", stringsAsFactors = FALSE)
Exp3_r1[Exp3_r1$Genotype == "Jack", 2:2] <- c("ZJack")
mrZ <- glm(PGC ~ (Genotype + Pre.Treat) ^2, family = binomial, data = Exp3_r1)
AnZ <- Anova(mrZ, type = 2)
res2 <- tidy(mrZ)
res2
res
mrZ <- glm(PGC ~ (Genotype + Pre.Treat) ^ 2, family = binomial, data = Exp3_I)
Exp3_r1 <- read.table("D:/Soybean Anther Data/R-Analysis/Exp3.csv", header = T, sep = ",", stringsAsFactors = FALSE)
Exp3_r1[Exp3_r1$Genotype == "Jack", 2:2] <- c("ZJack")
mrZ <- glm(PGC ~ (Genotype + Pre.Treat) ^2, family = binomial, data = Exp3_r1)
AnZ <- Anova(mrZ, type = 2)
res2 <- tidy(mrZ)
mrZ <- glm(PGC ~ (Genotype + Pre.Treat) ^ 2, family = binomial, data = Exp3_I)
Exp3_r1 <- read.table("D:/Soybean Anther Data/R-Analysis/Exp3.csv", header = T, sep = ",", stringsAsFactors = FALSE)
Exp3_r1[Exp3_r1$Genotype == "Jack", 2:2] <- c("ZJack")
mrZ <- glm(PGC ~ (Genotype + Pre.Treat) ^ 2, family = binomial, data = Exp3_I)
mrZ <- glm(PGC ~ (Genotype + Pre.Treat) ^ 2, family = binomial, data = Exp3_r1)
tidy(mrZ)
results <- data.frame()
for (geno in unique(Exp3$Genotype)) {
for (treat in unique(Exp3$Pre.Treat)) {
pr <- predict.glm(mr, list(Genotype = geno, Pre.Treat = treat), type = "response", se.fit = T)
df <- data.frame(Genotype = geno, Pre.Treat = treat, fit = pr$fit, se.fit = pr$se.fit, residual.scale = pr$residual.scale, TermName = paste("Genotype", geno, ":Pre.Treat", treat,sep = ""))
results <- rbind(results, df)
}
}
Exp3 <- read.table("D:/Soybean Anther Data/R-Analysis/Exp3.csv", header = T, sep = ",")
mrZ <- glm(PGC ~ (Genotype + Pre.Treat) ^ 2, family = binomial, data = Exp3_r1)
tidy(mrZ)
results <- data.frame()
for (geno in unique(Exp3$Genotype)) {
for (treat in unique(Exp3$Pre.Treat)) {
pr <- predict.glm(mr, list(Genotype = geno, Pre.Treat = treat), type = "response", se.fit = T)
df <- data.frame(Genotype = geno, Pre.Treat = treat, fit = pr$fit, se.fit = pr$se.fit, residual.scale = pr$residual.scale, TermName = paste("Genotype", geno, ":Pre.Treat", treat,sep = ""))
results <- rbind(results, df)
}
}
.
Exp3 <- read.table("D:/Soybean Anther Data/R-Analysis/Exp3.csv", header = T, sep = ",")
mr <- glm(PGC ~ (Genotype + Pre.Treat) ^ 2, family = binomial, data = Exp3)
ar <- Anova(mr, type = 2)
smr <- summary(mr)
smr
Exp3_r1 <- read.table("D:/Soybean Anther Data/R-Analysis/Exp3.csv", header = T, sep = ",", stringsAsFactors = FALSE)
Exp3_r1[Exp3_r1$Genotype == "Jack", 2:2] <- c("ZJack")
mrZ <- glm(PGC ~ (Genotype + Pre.Treat) ^2, family = binomial, data = Exp3_r1)
AnZ <- Anova(mrZ, type = 2)
res2 <- tidy(mrZ)
res2
mrZ <- glm(PGC ~ (Genotype + Pre.Treat) ^ 2, family = binomial, data = Exp3_r1)
tidy(mrZ)
results <- data.frame()
for (geno in unique(Exp3$Genotype)) {
for (treat in unique(Exp3$Pre.Treat)) {
pr <- predict.glm(mr, list(Genotype = geno, Pre.Treat = treat), type = "response", se.fit = T)
df <- data.frame(Genotype = geno, Pre.Treat = treat, fit = pr$fit, se.fit = pr$se.fit, residual.scale = pr$residual.scale, TermName = paste("Genotype", geno, ":Pre.Treat", treat,sep = ""))
results <- rbind(results, df)
}
}
results
library(sqldf)
sqlcmd <- "SELECT R.[Genotype], R.[Pre.Treat], R.fit,R.[se.fit], R.[residual.scale]
,C.estimate, C.[std.error], C.[statistic], C.[p.value]
FROM results as R
LEFT JOIN res2 as C ON R.TermName LIKE C.term"
install.packages("sqldf")
library(sqldf)
sqlcmd <- "SELECT R.[Genotype], R.[Pre.Treat], R.fit,R.[se.fit], R.[residual.scale]
,C.estimate, C.[std.error], C.[statistic], C.[p.value]
FROM results as R
LEFT JOIN res2 as C ON R.TermName LIKE C.term"
sqldf(sqlcmd)
res2
mrZ <- glm(PGC ~ (Genotype + Pre.Treat) ^ 2, family = binomial, data = Exp3_r1)
tidy(mrZ)
results <- data.frame()
for (geno in unique(Exp3$Genotype)) {
for (treat in unique(Exp3$Pre.Treat)) {
pr <- predict.glm(mr, list(Genotype = geno, Pre.Treat = treat), type = "response", se.fit = T)
df <- data.frame(Genotype = geno, Pre.Treat = treat, fit = pr$fit, se.fit = pr$se.fit, residual.scale = pr$residual.scale, TermName = paste("Genotype", geno, ":Pre.Treat", treat,sep = ""))
results <- rbind(results, df)
}
}
results
library(sqldf)
sqlcmd <- "SELECT R.[Genotype], R.[Pre.Treat], R.fit,R.[se.fit], R.[residual.scale]
,C.estimate, C.[std.error], C.[statistic], C.[p.value]
FROM results as R
LEFT JOIN res2 as C ON R.TermName LIKE C.term"
sqldf(sqlcmd)
res2
Exp3 <- read.table("D:/Soybean Anther Data/R-Analysis/Exp3.csv", header = T, sep = ",")
mr <- glm(PGC ~ (Genotype + Pre.Treat) ^ 2, family = binomial, data = Exp3)
ar <- Anova(mr, type = 2)
smr <- summary(mr)
smr
Exp3_r1 <- read.table("D:/Soybean Anther Data/R-Analysis/Exp3.csv", header = T, sep = ",", stringsAsFactors = FALSE)
Exp3_r1[Exp3_r1$Genotype == "Jack", 2:2] <- c("ZJack")
mrZ <- glm(PGC ~ (Genotype + Pre.Treat) ^2, family = binomial, data = Exp3_r1)
AnZ <- Anova(mrZ, type = 2)
res2 <- tidy(mrZ)
res2
mrZ <- glm(PGC ~ (Genotype + Pre.Treat) ^ 2, family = binomial, data = Exp3_r1)
tidy(mrZ)
results <- data.frame()
for (geno in unique(Exp3$Genotype)) {
for (treat in unique(Exp3$Pre.Treat)) {
pr <- predict.glm(mr, list(Genotype = geno, Pre.Treat = treat), type = "response", se.fit = T)
df <- data.frame(Genotype = geno, Pre.Treat = treat, fit = pr$fit, se.fit = pr$se.fit, residual.scale = pr$residual.scale, TermName = paste("Genotype", geno, ":Pre.Treat", treat,sep = ""))
results <- rbind(results, df)
}
}
results
sqlcmd <- "SELECT R.[Genotype], R.[Pre.Treat], R.fit,R.[se.fit], R.[residual.scale]
,C.estimate, C.[std.error], C.[statistic], C.[p.value]
FROM results as R
LEFT JOIN res2 as C ON R.TermName LIKE C.term"
sqldf(sqlcmd)
View(Exp3)
